---
import type { ImageTransform } from 'astro';
import { getImage } from 'astro:assets';
import { twMerge } from 'tailwind-merge';
import { tv, type VariantProps } from 'tailwind-variants';

const variants = tv({
  base: 'relative overflow-hidden relative shrink-0 rounded-full border bg-muted',
  defaultVariants: { size: 'md' },
  variants: { size: { sm: 'h-10 w-10 text-xs', md: 'h-12 w-12', lg: 'h-16 w-16 text-base' } },
});

type Props = Partial<ImageTransform> & { alt: string } & VariantProps<typeof variants>;

const { class: className, src, alt, size, ...props } = Astro.props;
const image = src ? await getImage({ src, alt, height: 100, width: 100, ...props }) : undefined;
---

<div class={twMerge(variants({ size }), className)}>
  {
    image && (
      <img
        {...image.attributes}
        src={image.src}
        class="relative z-[var(--z-index)] aspect-square bg-inherit [--z-index:-20]"
        onload="this.style.setProperty('--z-index', 20)"
      />
    )
  }
  <span class="absolute inset-0 z-10 flex items-center justify-center">{alt}</span>
</div>
