---
import type { HTMLAttributes } from 'astro/types';
import { twMerge } from 'tailwind-merge';
import { tv, type VariantProps } from 'tailwind-variants';

const variants = tv({
  base: 'relative',
  defaultVariants: { size: 'md' },
  variants: { size: { sm: 'h-14 w-14 text-xs', md: 'h-20 w-20', lg: 'h-28 w-28' } },
});

type Props = HTMLAttributes<'div'> & { value: number } & VariantProps<typeof variants>;

const { class: className, value, size, ...props } = Astro.props;
---

<div
  {...props}
  role="progressbar"
  aria-valuemin="0"
  aria-valuemax="100"
  aria-valuenow={value}
  class={twMerge(variants({ size }), className)}
>
  <svg class="h-full w-full" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg">
    <circle class="fill-none stroke-primary/20 stroke-2" cx="15" cy="15" r="14"></circle>
    <circle
      cx="15"
      cy="15"
      r="14"
      stroke-linecap="round"
      stroke-dasharray={`${2 * Math.PI * 14 * (value / 100)} ${2 * Math.PI * 14}`}
      class="origin-center -rotate-90 fill-none stroke-primary stroke-2"></circle>
  </svg>
  <div class="absolute inset-0 flex items-center justify-center">{value}%</div>
</div>
